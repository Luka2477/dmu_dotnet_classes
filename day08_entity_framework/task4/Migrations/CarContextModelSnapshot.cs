// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using task4.DAL;

#nullable disable

namespace task4.Migrations
{
    [DbContext(typeof(CarContext))]
    partial class CarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("task4.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wheels")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Make = "Volkswagen",
                            Model = "Golf GTI",
                            Wheels = 4,
                            Year = 2016
                        },
                        new
                        {
                            ID = 2,
                            Make = "Mercedes",
                            Model = "C300",
                            Wheels = 4,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("task4.Models.Owner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<int>("Cpr")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CarID");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CarID = 1,
                            Cpr = 1902005109,
                            Name = "Lukas Knudsen"
                        },
                        new
                        {
                            ID = 2,
                            CarID = 1,
                            Cpr = 1122334455,
                            Name = "Nicolai Knudsen"
                        },
                        new
                        {
                            ID = 3,
                            CarID = 2,
                            Cpr = 12345678,
                            Name = "Berta Vazquez de Zubiaurre"
                        });
                });

            modelBuilder.Entity("task4.Models.Owner", b =>
                {
                    b.HasOne("task4.Models.Car", "Car")
                        .WithMany("Owners")
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("task4.Models.Car", b =>
                {
                    b.Navigation("Owners");
                });
#pragma warning restore 612, 618
        }
    }
}
